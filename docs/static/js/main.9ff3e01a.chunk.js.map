{"version":3,"sources":["components/PlayingCard/CardPattern.module.css","components/PlayingCard/PlayingCard.module.css","components/PlayingCard/constants.js","components/PlayingCard/CardPattern.js","components/PlayingCard/PlayingCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ALL_SUITS","ALL_POINTS","CARD_PATTERN_MAP","A","J","Q","K","isRed","suit","CardPattern","point","size","pattern","className","styles","wrapper","classNames","red","big","col","Array","keys","map","index","key","rotated","colOne","col31","colOneBig","col41","col42","col32","defaultProps","PlayingCard","props","playingCard","style","inner","content","textTop","text","textBottom","App","useState","setSize","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ff3e01a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"CardPattern_col__38rlU\",\"pattern\":\"CardPattern_pattern__1fL7-\",\"col32\":\"CardPattern_col32__1AaMU\",\"col31\":\"CardPattern_col31__3T9Wl\",\"col42\":\"CardPattern_col42__OTTbO\",\"col41\":\"CardPattern_col41__J9MiS\",\"colOne\":\"CardPattern_colOne__36f9k\",\"colOneBig\":\"CardPattern_colOneBig__2WYj0\",\"red\":\"CardPattern_red__35tTf\",\"wrapper\":\"CardPattern_wrapper__331Jz\",\"big\":\"CardPattern_big__33_O5\",\"rotated\":\"CardPattern_rotated__spMy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playingCard\":\"PlayingCard_playingCard__180UD\",\"inner\":\"PlayingCard_inner__35jBS\",\"content\":\"PlayingCard_content__2bney\",\"big\":\"PlayingCard_big__3EHNt\",\"normal\":\"PlayingCard_normal__23v-3\",\"small\":\"PlayingCard_small__3ZKyM\",\"text\":\"PlayingCard_text__1xPtm\",\"textTop\":\"PlayingCard_textTop__Vjtia\",\"textBottom\":\"PlayingCard_textBottom__2cK_v\",\"pattern\":\"PlayingCard_pattern__1rYEn\",\"red\":\"PlayingCard_red__3hKra\",\"suit\":\"PlayingCard_suit__1OBLX\"};","export const ALL_SUITS = [\"♠\", \"♥\", \"♣\", \"♦\"];\nexport const ALL_POINTS = [\n  \"A\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"J\",\n  \"Q\",\n  \"K\",\n];\nexport const CARD_PATTERN_MAP = {\n  A: [0, 1, 0],\n  \"2\": [0, 2, 0],\n  \"3\": [0, 3, 0],\n  \"4\": [2, 0, 2],\n  \"5\": [2, 1, 2],\n  \"6\": [3, 0, 3],\n  \"7\": [3, 1, 3],\n  \"8\": [3, 2, 3],\n  \"9\": [4, 1, 4],\n  \"10\": [4, 2, 4],\n  J: [0, 1, 0],\n  Q: [0, 1, 0],\n  K: [0, 1, 0],\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { CARD_PATTERN_MAP, ALL_POINTS, ALL_SUITS } from \"./constants\";\n\nimport styles from \"./CardPattern.module.css\";\n\nfunction isRed(suit) {\n  return suit === \"♥\" || suit === \"♦\";\n}\n\nfunction CardPattern({ point, suit, size }) {\n  const pattern = CARD_PATTERN_MAP[point];\n\n  return (\n    <div className={styles.wrapper}>\n      {pattern && (\n        <div\n          className={classNames(styles.pattern, {\n            [styles.red]: isRed(suit),\n            [styles.big]: size === \"big\",\n          })}\n        >\n          <div className={styles.col}>\n            {[...Array(pattern[0]).keys()].map((index) => (\n              <div\n                key={index}\n                className={classNames({\n                  [styles.rotated]: index >= pattern[2] / 2,\n                })}\n              >\n                {suit}\n              </div>\n            ))}\n          </div>\n          <div\n            className={classNames(styles.col, {\n              [styles.colOne]: (pattern[1] === 1 && pattern[0]) === 2,\n              [styles.col31]: (pattern[1] === 1 && pattern[0]) === 3,\n              [styles.colOneBig]: pattern[1] === 1 && pattern[0] === 0,\n              [styles.col41]: pattern[1] === 1 && pattern[0] === 4,\n              [styles.col42]: pattern[1] === 2 && pattern[0] === 4,\n              [styles.col32]: pattern[1] === 2 && pattern[0] === 3,\n            })}\n          >\n            {[...Array(pattern[1]).keys()].map((index) => (\n              <div\n                key={index}\n                className={classNames({\n                  [styles.rotated]: index >= pattern[1] / 2,\n                })}\n              >\n                {suit}\n              </div>\n            ))}\n          </div>\n          <div className={styles.col}>\n            {[...Array(pattern[2]).keys()].map((index) => (\n              <div\n                key={index}\n                className={classNames({\n                  [styles.rotated]: index >= pattern[2] / 2,\n                })}\n              >\n                {suit}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nCardPattern.propTypes = {\n  point: PropTypes.oneOf(ALL_POINTS).isRequired,\n  suit: PropTypes.oneOf(ALL_SUITS).isRequired,\n  size: PropTypes.oneOf([\"normal\", \"big\"]),\n};\n\nCardPattern.defaultProps = {\n  size: \"normal\",\n};\n\nexport default CardPattern;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { ALL_POINTS, ALL_SUITS } from \"./constants\";\nimport styles from \"./PlayingCard.module.css\";\nimport CardPatern from \"./CardPattern\";\n\nfunction isRed(suit) {\n  return suit === \"♥\" || suit === \"♦\";\n}\n\nfunction PlayingCard(props) {\n  return (\n    <div\n      className={classNames(\n        styles.playingCard,\n        styles[props.size],\n        props.className\n      )}\n      style={props.style}\n    >\n      <div className={styles.inner}></div>\n      <div className={styles.content}>\n        <div\n          className={classNames(styles.textTop, styles.text, {\n            [styles.red]: isRed(props.suit),\n          })}\n        >\n          <div>{props.point}</div>\n          <div>{props.suit}</div>\n        </div>\n        <div\n          className={classNames(styles.textBottom, styles.text, {\n            [styles.red]: isRed(props.suit),\n          })}\n        >\n          <div>{props.point}</div>\n          <div>{props.suit}</div>\n        </div>\n        <div className={styles.pattern}>\n          {props.size !== \"small\" ? (\n            <CardPatern suit={props.suit} point={props.point} size={props.size} />\n          ) : (\n            <div className={classNames(styles.suit, {\n              [styles.red]: isRed(props.suit),\n            })}>{props.suit}</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nPlayingCard.propTypes = {\n  suit: PropTypes.oneOf(ALL_SUITS).isRequired,\n  point: PropTypes.oneOf(ALL_POINTS).isRequired,\n  size: PropTypes.oneOf([\"small\", \"normal\", \"big\"]),\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nPlayingCard.defaultProps = {\n  size: \"normal\",\n};\n\nexport default PlayingCard;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport { ALL_POINTS, ALL_SUITS } from \"./components/PlayingCard/constants\";\nimport PlayingCard from \"./components/PlayingCard\";\n\nfunction App() {\n  const [size, setSize] = useState(\"normal\");\n\n  return (\n    <div className=\"App\">\n      <div className=\"control\">\n        <div className=\"btn-group\">\n          <button onClick={() => setSize(\"small\")}>small</button>\n          <button onClick={() => setSize(\"normal\")}>normal</button>\n          <button onClick={() => setSize(\"big\")}>big</button>\n        </div>\n      </div>\n      <div>\n        {ALL_POINTS.map((point) => {\n          return ALL_SUITS.map((suit) => {\n            return (\n              <PlayingCard\n                size={size}\n                suit={suit}\n                point={point}\n                key={suit + point}\n                className=\"test-card\"\n              ></PlayingCard>\n            );\n          });\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}